# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main
- feature/aks

pool: 
  vmImage: ubuntu-latest
variables:
  -group: terraform
  -name: subscription_id
   value:$[variable.subscription_id]
  -name: tenant_id
   value:$[variable.tenant_id]
steps:
- task: TerraformInstaller@1
  inputs:
    terraformVersion: 'latest'
- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'Free Trial(1)(6e0bd79b-1d94-4cb0-aea2-ef7a6d11eeef)'
    backendAzureRmResourceGroupName: 'tharanirg'
    backendAzureRmStorageAccountName: 'strgfile'
    backendAzureRmContainerName: 'terraform'
    backendAzureRmKey: 'terraform.tfstate'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'validate'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: 'Free Trial(2)(6e0bd79b-1d94-4cb0-aea2-ef7a6d11eeef)'
    
- task: PowerShell@2
  env:
  ARM_CLIENT_SECRET = "null"
  ARM_CLIENT_ID = "null"
  ARM_SUBSCRIPTION_ID = $(subscription_id)
  ARM_TENANT_ID = $(tenant_id)

  inputs:
    targetType: 'inline'
    script: 'terraform apply'